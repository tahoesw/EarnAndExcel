# -*- coding: utf-8 -*-
"""6. Dummification Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BFLFM--H4vCH_aYtmfDPCLh-rdPHe6BU
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn import linear_model
import warnings
warnings.filterwarnings("ignore")

"""**Read data**"""

# Uploaded from C:\Users\wel51x\Box\MyBox\Data\
df = pd.read_csv("nba.csv")
dummies_df = df[["Year", "Pos", "TRB", "PTS"]]
dummies_df = dummies_df[(dummies_df.Pos == "PG") | (dummies_df.Pos == "C") | (dummies_df.Pos == "SF") | (dummies_df.Pos == "SG") | (dummies_df.Pos == "PF")]
dummies_df

print(dummies_df.Pos.value_counts())
#sns.set(rc = {'figure.figsize':(5,4)})
sns.barplot(data=dummies_df, x="Pos", y="PTS")

"""**Clean data and dummify position**"""

dummies = pd.get_dummies(dummies_df.Pos)
dummies.drop("SG", axis = 1, inplace=True)
dummies_df = dummies_df.join(dummies)
dummies_df.drop("Pos", axis = 1, inplace=True)
dummies_df

X = dummies_df[list(dummies_df.columns[3:])]

y = dummies_df.PTS

# Just for yuks
#print(df.Pos.value_counts())
sns.set(rc = {'figure.figsize':(15,8)})
sns.barplot(data=df, x="Pos", y="PTS")

"""**Define model type and fit**"""

# Step 1: define model
lm = linear_model.LinearRegression()

# Step 2: fit X to Y
lm.fit(X, y)

"""**Results**"""

print("coeff = ", lm.coef_, "intercept = ", lm.intercept_)

Pos = ["SG", "C", "PF", "PG", "SF"]
for i in range(5):
  if i == 0:
    print("For Position =", Pos[i], "==> Points scored prediction is", lm.intercept_)
  else:
    print("For Position =", Pos[i], "==> Points scored prediction is", lm.intercept_ + lm.coef_[i-1])

# ?????
lm.predict([range(4)])